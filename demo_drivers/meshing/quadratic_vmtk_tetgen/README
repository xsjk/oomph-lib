This directory contains driver codes that illustrate
how to create fluid and solid meshes from vmtk-generated *.vtp 
files, and how to move the nodes on the fsi interface
to the quadratic representation provided by vmtk.


vtp_to_tetgen.bash: 

                    Shell script that shows how to
                    generate tetgen mesh files (for use
                    with oomph-lib's TetgenMesh class)
                    for FSI problems in which the fluid geometry
                    is defined by a *vtp file generated in an earlier
                    interactive vmtk session. Sample input
                    files for this script are in the
                    directory 

                         vmtk_files/

                    Note: The script operates in a working
                    directory, vmtk_working_dir, to keep the
                    main directory clean. It needs/uses the
                    conversion code xda_to_poly_fsi, discussed below.

                    Output:
                    
                    -- The files

                           fluid.poly solid.poly
 
                        define the fluid and solid domains in tetgen 
                        format and can be used to generate *.1.* 
                        files with tetgen. The files:
                          
                            fluid.1.ele  fluid.1.face  fluid.1.node
                            solid.1.ele  solid.1.face  solid.1.node
 
                        are examples that represent fairly coarse meshes.

                     -- The file
                    
                            boundary_enumeration.dat
                          
                         contains the boundary enumeration for the
                         various domain boundaries.

                     -- The files
 
                           quadratic_fsi_boundary.dat
  
                           quadratic_outer_solid_boundary.dat

                         can be used by

                            TetgenMesh::snap_to_quadratic_surface(...) 
 
                         to move nodes on the curvilinear domain boundaries
                         (the fsi interface and outer surface of the solid)
                         to their quadratic representation specified
                         by vmtk via the xda file.

 
xda_to_poly_fsi.cc:
 
                    Conversion code which converts the (quadratic) 
                    xda file generated by vmtk into poly files that 
                    define the tetgen fluid and solid meshes. 

                    Input: xda mesh name and desired wall thickness. 

                    Output: poly files for fluid and solid meshes; 
                            a file that lists the enumeration of the 
                            relevant mesh boundaries (required for the FSI
                            setup) 

snap_mesh.cc:       

                    Demo code that shows how to smooth FSI fluid and
                    solid meshes whose boundary nodes have been moved
                    to conform to the quadratic representation of the fsi
                    interface provided by the quadratic xda file 
                    generated by vmtk in vtp_to_tetgen.bash.


                    The code uses representative data contained in the
                    directory

                       short_coarse_mesh_files/

                    It builds the mesh, using the *.1.* files generated
                    by tetgen, enumerates their boundaries using 

                      boundary_enumeration.dat

                    snaps the nodes on the "quadratic" boundaries to
                    their new positions and then demonstrates various smoothing
                    operations that move the interior nodes in such a way
                    that the elements are no longer inverted. For the
                    data used here, only the expensive (!) nonlinear
                    elasticity-based smoothing does a decent job. 
                    
                    The new nodal positions are output in

                        new_nodal_positions.dat

                    and they can be used in "real" fsi computations, such 
                    as those in 

                       demo_drivers/interaction/unsteady_vmtk_fsi/



                    
                    