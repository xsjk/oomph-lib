\mainpage Mesh generation based on Geompack++

In this document we demonstrate how to generate quadrilateral \c oomph-lib 
meshes, based on the output from Barry Joe's 
mesh generator 
<A HREF="http://members.shaw.ca/bjoe/">\c Geompack++, </A>
available as freeware at 
<A HREF="http://members.shaw.ca/bjoe/">
http://members.shaw.ca/bjoe/.</A>
The mesh generation is performed in a two-stage process.
First we use <A HREF="http://members.shaw.ca/bjoe/">\c
Geompack++ </A>  to generate the mesh "offline". Then we
process the output files generated by  
<A HREF="http://members.shaw.ca/bjoe/">\c Geompack++ </A>
to generate an \c oomph-lib mesh. 

<HR>
<HR>

\section geompack_use Example of the use of Geompack++

The documents \c meshoper.pdf and \c regmesh.pdf distributed with 
<A HREF="http://members.shaw.ca/bjoe/">\c Geompack++ </A>
contain a comprehensive User's Guide for the
code and its many options. 
<A HREF="http://members.shaw.ca/bjoe/">\c Geompack++ </A>
is a very sophisticated mesh generator and can be used to create
2D and 3D meshes with a wide variety of element types. 
Here we only discuss how to use 
<A HREF="http://members.shaw.ca/bjoe/">\c Geompack++ </A> 
to generate 2D quadrilateral meshes. [The development of 
of \c oomph-lib meshes that process 
<A HREF="http://members.shaw.ca/bjoe/">\c Geompack++'s </A> 
output for other element types should be straightforward but is 
still on our "To Do" list -- any volunteers?]



<A HREF="http://members.shaw.ca/bjoe/">\c
 Geompack++ </A>
 creates quadrilateral meshes, based on the information
about the mesh boundaries (nodes and curves) provided in two input files, 
\c filename.rg2 and \c filename.cs2, say. An output file, 
\c filename.1.mh2 is created. It contains the information about the 
mesh boundaries, the nodal positions and the element connectivity
lists.

<HR>


\subsection geomview How to visualise a mesh generated by Geompack++

To visualise the mesh, the program \c Geomview is available. 
(\c Geomview can be downloaded
from the <A HREF="http://www.geomview.org/">\c Geomview home page
</A>.) The 
<A HREF="http://members.shaw.ca/bjoe/">\c Geompack++
</A>  output file cannot be processed directly by
<A HREF="http://www.geomview.org/">
\c Geomview </A> but a simple program that converts the 
file \c filename.mh2 to a format that is readable by 
<A HREF="http://www.geomview.org/">\c Geomview
</A> is 
<A HREF="../../../../demo_drivers/meshing/mesh_from_geompack/convert_geom_file.cc">
available.</A>

<HR>

\subsection example The example: A rectangle with a hole

As an example we demonstrate how to use 
<A HREF="http://members.shaw.ca/bjoe/">\c Geompack++
</A>  to generate a mesh for the rectangular domain with a hole shown in the
figure below. The domain is defined by eight nodes and eight curves
(straight lines) which connect the nodes and define two boundaries.  
The boundary numbers shown in the sketch correspond to those in the 
<A HREF="http://members.shaw.ca/bjoe/">\c Geompack++ </A>
input region file 
<A HREF="../../../../demo_drivers/meshing/mesh_from_geompack/box_hole.rg2">
box_hole.rg2 </A> and in the curve input 
file <A HREF="../../../../demo_drivers/meshing/mesh_from_geompack/box_hole.cs2">
box_hole.cs2.</A>  In the corresponding \c oomph-lib mesh, the boundaries are 
numbered from zero.

@I w 0.75\textwidth box_hole_2 "A rectangular domain with a hole. "


The desired mesh characteristics are defined in the file
<A HREF="../../../../demo_drivers/meshing/mesh_from_geompack/box_hole.m2">
box_hole.m2</A> which specifies that the final mesh should
contain approximately 200 elements.  When processed with the command 
\code
./geompack++ box_hole.m2 error.log
\endcode
<A HREF="http://members.shaw.ca/bjoe/"><CODE>Geompack++
</CODE></A>  creates the output file
<A HREF="../../../../demo_drivers/meshing/mesh_from_geompack/box_hole.mh2">
box_hole.mh2.</A>



 Here is a sketch of the resulting discretisation, 
as displayed by \c geomview :

@I w 0.75\textwidth geomview_box_screenshot "Screenshot of geomview, showing the discretisation of the rectangular domain with a hole. "


<HR>

\section oomph_use Creating an oomph-lib mesh based on output files generated by Geompack++

\c oomph-lib provides a mesh, \c GeompackQuadMesh, that uses the 
output from <A HREF="http://members.shaw.ca/bjoe/">
\c Geompack++ </A>  to generate an \c oomph-lib Mesh containing 
\c QElement<2,2> four-node quadrilateral elements. The relevant interface is:

\dontinclude geompack_mesh.template.h
\skipline start_of_geompackquadmesh_class
\until Default_TimeStepper
 
The driver code <A HREF="../../../../demo_drivers/meshing/mesh_from_geompack/mesh_from_geompack_poisson.cc">mesh_from_geompack_poisson.cc</A>
demonstrates the  use of this mesh for the solution of a
2D Poisson problem in the "rectangular domain with a hole",
described in the previous section.

The code expects the names of \c *.\c mh2 and *.\c cs2 files
generated by 
<A HREF="http://members.shaw.ca/bjoe/">\c Geompack++
</A> as command line arguments and stores them 
in the namespace \c CommandLineArgs 

\dontinclude mesh_from_geompack_poisson.cc
\skipline int main
\until }
 
The names of these files are then passed to the mesh constructor. 
Since the rest of the  <A HREF="../../../../demo_drivers/meshing/mesh_from_geompack/mesh_from_geompack_poisson.cc">driver
code </A> is identical to that in the
<A HREF="../../../../doc/poisson/two_d_poisson/html/index.html">
corresponding example with a structured mesh</A>, 
we do not provide a detailed code listing but simply show the plot of the 
computed results, together with the tanh-shaped exact
solution of the problem:

@I w 0.75\textwidth validate "Computed and exact solutions. "




<HR>
<HR>


\section sources Source files for this tutorial
- The source files for this tutorial are located in the directory:\n\n
<CENTER>
<A HREF="../../../../demo_drivers/meshing/mesh_from_geompack/">
demo_drivers/meshing/mesh_from_geompack/
</A>
</CENTER>\n
- The driver code is: \n\n
<CENTER>
<A HREF="../../../../demo_drivers/meshing/mesh_from_geompack/mesh_from_geompack_poisson.cc">
demo_drivers/meshing/mesh_from_geompack/mesh_from_geompack_poisson.cc
</A>
</CENTER>
.

