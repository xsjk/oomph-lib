#FIG 3.2
Portrait
Center
Inches
A4      
99.00
Single
-2
1200 2
6 12075 15375 14550 16650
4 0 0 50 -1 -1 13 0.0000 4 195 2220 12075 15525 Equation-specific objects.\001
4 0 0 50 -1 -1 13 0.0000 4 195 2220 12075 15780 If you formulate your own\001
4 0 0 50 -1 -1 13 0.0000 4 195 2220 12075 16035 elements, you will have to\001
4 0 0 50 -1 -1 13 0.0000 4 195 2130 12075 16290 implement these for your\001
4 0 0 50 -1 -1 13 0.0000 4 195 2460 12075 16545 specific system of equations.\001
-6
6 5475 675 10500 2625
2 2 0 1 0 29 100 -1 20 0.000 0 0 -1 0 0 5
	 5475 675 10500 675 10500 2625 5475 2625 5475 675
4 0 0 50 -1 18 13 0.0000 4 165 2070 6754 1050 GeneralisedElement\001
4 0 0 50 -1 -1 13 0.0000 4 195 4785 5635 1650 The minimum requirement is that GeneralisedElements \001
4 0 0 50 -1 -1 13 0.0000 4 195 4605 5635 2100 and the global Jacobian matrix. GeneralisedElements \001
4 0 0 50 -1 -1 13 0.0000 4 195 2670 5635 2325 do not necessarily have nodes. \001
4 0 0 50 -1 -1 13 0.0000 4 195 3795 5635 1425 Virtual base class for all oomph-lib elements.\001
4 0 0 50 -1 -1 13 0.0000 4 195 4785 5635 1875 compute their contributions to the global residual vector \001
-6
6 5400 3825 10500 5325
2 2 0 1 0 29 100 -1 20 0.000 0 0 -1 0 0 5
	 5400 3825 10500 3825 10500 5325 5400 5325 5400 3825
4 0 0 50 -1 18 13 0.0000 4 165 1410 6657 4200 FiniteElement\001
4 0 0 50 -1 -1 13 0.0000 4 150 4725 5636 4575 Virtual base class for all finite elements. This class adds\001
4 0 0 50 -1 -1 13 0.0000 4 180 4485 5636 5025 functions, etc to the GeneralisedElement base class.\001
4 0 0 50 -1 -1 13 0.0000 4 195 4710 5636 4800 storage for nodes, and  pure virtual interfaces for shape\001
-6
6 2550 6825 7800 8550
2 2 0 1 0 29 100 -1 20 0.000 0 0 -1 0 0 5
	 2550 6825 7800 6825 7800 8550 2550 8550 2550 6825
4 0 0 50 -1 -1 13 0.0000 4 195 4710 2723 7500 An example of a geometric element class: Implements \001
4 0 0 50 -1 -1 13 0.0000 4 195 4980 2723 7725 the shape functions and the element's representation of its \001
4 0 0 50 -1 -1 13 0.0000 4 195 4590 2723 8175 coordinates, based on interpolation between its nodal.\001
4 0 0 50 -1 -1 13 0.0000 4 150 1065 2723 8400 coordinates.\001
4 0 0 50 -1 18 13 0.0000 4 165 1005 4420 7200 QElement\001
4 0 0 50 -1 -1 13 0.0000 4 195 4485 2723 7950 geometry -- the mapping between its local and global\001
-6
6 8325 6675 13950 8850
2 2 1 3 12 30 100 -1 20 8.000 0 0 -1 0 0 5
	 8400 6750 13875 6750 13875 8775 8400 8775 8400 6750
4 0 0 50 -1 0 13 0.0000 4 195 3930 8625 7350 Implements the computation of the element's  \001
4 0 0 50 -1 0 13 0.0000 4 180 4755 8625 7575 residual vector and Jacobian matrix, based on the weak\001
4 0 0 50 -1 0 13 0.0000 4 195 4830 8625 8025 the "abstract" mathematics -- everything is expressed in \001
4 0 0 50 -1 0 13 0.0000 4 195 5085 8625 7800 form of the advection diffusion equation. This class contains\001
4 0 0 50 -1 18 12 0.0000 4 180 2550 9600 7050 AdvectionDiffusionEquations\001
4 0 0 50 -1 0 13 0.0000 4 195 3960 8625 8250 terms of (pure virtual) basis and test functions.\001
-6
6 4425 10050 10875 13950
2 2 1 3 12 30 100 -1 20 8.000 0 0 -1 0 0 5
	 4500 10125 10800 10125 10800 13875 4500 13875 4500 10125
4 0 0 50 -1 18 12 0.0000 4 135 2550 6375 10500 QAdvectionDiffusionElement\001
4 0 0 50 -1 0 13 0.0000 4 195 4455 4800 11025 Combines (by inheritance) the representation of the \001
4 0 0 50 -1 0 13 0.0000 4 195 4170 4800 11250 element geometry (from the QElement) with the \001
4 0 0 50 -1 0 13 0.0000 4 195 4140 4800 11475 computation of the element's residual vector and\001
4 0 0 50 -1 0 13 0.0000 4 195 5625 4800 13050 - as basis functions for the representation of the element geometry\001
4 0 0 50 -1 0 13 0.0000 4 195 5430 4800 13275 - as basis functions for the represention of the unknown function\001
4 0 0 50 -1 0 13 0.0000 4 195 4950 4800 11700 Jacobian matrix (from the AdvectionDiffusionEquations). \001
4 0 0 50 -1 0 13 0.0000 4 195 5385 4800 12150 functions in the AdvectionDiffusionEquations class) by defining\001
4 0 0 50 -1 0 13 0.0000 4 195 4785 4800 13500 - as the test functions in the weak form of the equations. \001
4 0 0 50 -1 0 13 0.0000 4 195 3855 4800 10800 Fully functional, advection diffusion element. \001
4 0 0 50 -1 0 13 0.0000 4 195 5415 4800 11925 Implements the basis and test functions (defined as pure virtual \001
4 0 0 50 -1 0 13 0.0000 4 195 5865 4800 12375 them as the QElement's geometric shape function -- this corresponds\001
4 0 0 50 -1 0 13 0.0000 4 195 5160 4800 12600 to an iso-parametric Galerkin discretisation since the (same)\001
4 0 0 50 -1 0 13 0.0000 4 150 1620 4800 12825 functions are used:\001
-6
2 2 1 3 12 30 100 -1 20 8.000 0 0 -1 0 0 5
	 10050 15450 11775 15450 11775 16425 10050 16425 10050 15450
2 2 0 1 0 29 100 -1 20 0.000 0 0 -1 0 0 5
	 4725 15375 6525 15375 6525 16350 4725 16350 4725 15375
2 1 0 1 0 7 50 -1 -1 0.000 0 0 -1 0 0 2
	 3525 14775 14400 14775
2 1 0 1 0 7 50 -1 -1 0.000 0 0 -1 1 0 2
	2 1 3.00 150.00 180.00
	 7575 3675 7575 2700
2 1 0 1 0 7 50 -1 -1 0.000 0 0 -1 1 0 2
	2 1 3.00 150.00 180.00
	 4492 6502 6967 5677
2 1 0 1 0 7 50 -1 -1 0.000 0 0 -1 1 0 2
	2 1 3.00 150.00 180.00
	 10423 6383 7798 5708
2 1 0 1 0 7 50 -1 -1 0.000 0 0 -1 1 0 2
	2 1 3.00 150.00 180.00
	 6450 9675 4500 8925
2 1 0 1 0 7 50 -1 -1 0.000 0 0 -1 1 0 2
	2 1 3.00 150.00 180.00
	 8175 9750 10725 9075
4 0 0 50 -1 -1 13 0.0000 4 195 1440 6975 15900 Generic objects.\001
4 0 0 50 -1 2 15 0.0000 4 150 540 3675 15225 KEY:\001
